{
  "env": {
    "node": true,
    "browser": true
  },
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "sourceType": "module",
    "requireConfigFile": false,
    "allowImportExportEverywhere": true
  },
  "extends": ["airbnb", "prettier", "plugin:meteor/recommended"],
  "plugins": ["prettier", "meteor"],
  "settings": {
    // The meteor import resolve doesn't support Atmosphere packages - it considers them deprecated
    // "import/resolver": "meteor"
  },
  "rules": {
    "prettier/prettier": "error",
    "react/jsx-filename-extension": "off",
    "import/no-absolute-path": "off",
    "import/extensions": "off",
    // disabled so that we're not expecting to find 'meteor' within
    // our dependencies.
    // XXX: this *should* be taken care of by eslint-import-resolver-meteor, investigate.
    // "import/no-extraneous-dependencies": "off",
    "no-underscore-dangle": ["error", { "allow": ["_id", "_ensureIndex"] }],
    "object-shorthand": ["error", "always", { "avoidQuotes": false }],
    "space-before-function-paren": "off",
    // for Meteor API's that rely on `this` context, e.g. Template.onCreated and publications
    "func-names": "off",
    "prefer-arrow-callback": "off",

    // Vx Team modifications - Warn on rules that would require refactoring to implement.
    // We want to be able to turn these back into "error"'s at some point. However, for
    // our first pass, we'll only consider the checks that ESLint can auto-fix as errors.
    // https://eslint.org/docs/latest/use/configure/rules#rule-severities
    "no-undef": "warn",
    "no-redeclare": "warn",
    "no-plusplus": "warn",
    "vars-on-top": "warn",
    "no-var": "warn",
    "block-scoped-var": "warn",
    "no-loop-func": "warn",
    "no-unused-vars": "warn",
    "prefer-destructuring": "warn",
    "no-param-reassign": "warn",
    "camelcase": "warn",
    "no-use-before-define": "warn",
    "no-restricted-globals": "warn",
    "radix": "warn",
    "global-require": "warn",
    "no-lonely-if": "warn",
    "no-return-assign": "warn",
    "no-shadow": "warn",
    "new-cap": "warn",
    "prefer-spread": "warn",
    "no-case-declarations": "warn",
    "default-case": "warn",
    "consistent-return": "warn",
    "no-unreachable": "warn",
    "no-useless-concat": "warn",
    "no-multi-str": "warn",
    "no-unused-expressions": "warn",
    "no-continue": "warn",
    "no-eval": "warn",
    "array-callback-return": "warn",
    "no-multi-assign": "warn",
    "no-new-wrappers": "warn",
    "no-sequences": "warn",
    "no-empty": "warn",
    "no-bitwise": "warn",
    "no-useless-escape": "warn",
    "no-unsafe-negation": "warn",
    "guard-for-in": "warn",
    "no-restricted-syntax": "warn",
    "class-methods-use-this": "warn",
    "eqeqeq": "warn",
    "operator-assignment": "warn",
    "prefer-const": "warn",
    "no-buffer-constructor": "warn",
    "no-prototype-builtins": "warn",
    "no-await-in-loop": "warn",
    "no-dupe-else-if": "warn",
    "meteor/no-session": "off",
    "meteor/template-names": "warn",
    "meteor/eventmap-params": "warn",
    "meteor/no-template-lifecycle-assignments": "warn",
    "import/prefer-default-export": "warn",
    "import/no-unresolved": ["warn", { "ignore": ["^meteor/", "^/"] }] // This may be tricky to resolve due to: https://github.com/clayne11/eslint-import-resolver-meteor/issues/5
  }
}
